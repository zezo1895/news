{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EXTRA\\\\lastproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navgation from \"./component/Navgation/Navgation\";\nimport Home from \"./page/Home\";\nimport Footer from \"./component/footer/Footer\";\nimport { BrowserRouter, Route, RouterProvider, Routes, createBrowserRouter, createHashRouter, createRoutesFromElements } from \"react-router-dom\";\nimport Moivedetails from \"./page/Moivedetails\";\nimport Layout from \"./page/Layout\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    fetchmoive();\n  }, []);\n  const [films, setfilms] = useState([]);\n  const [IsActive, setIsActive] = useState(\"\");\n  const [Pagecount, setPagecount] = useState(\"\");\n  const [Count, setCount] = useState(\"\");\n  console.log(Count);\n  const handleClick = () => {\n    setIsActive(!IsActive);\n  };\n  // ===============all movie======================\n  async function fetchmoive() {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=84efd41b07a43bc7a00301e107350456&language=ar-US&page=${Count}`);\n    const data = await response.json();\n    const page = await data.total_pages;\n    setPagecount(page);\n    // console.log(data);\n\n    const datatran = data.results.map(item => {\n      return {\n        id: item.id,\n        name: item.original_title,\n        image: item.poster_path,\n        rate: item.vote_average\n      };\n    });\n    setfilms(datatran);\n  } // ===============Page======================\n  async function getpage(page) {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=84efd41b07a43bc7a00301e107350456&language=ar-US&page=${page}`);\n    const data = await response.json();\n    const datatran = data.results.map(item => {\n      return {\n        id: item.id,\n        name: item.original_title,\n        image: item.poster_path,\n        rate: item.vote_average\n      };\n    });\n    setfilms(datatran);\n    setCount(page);\n  }\n  // ===============Search======================\n  async function search(word) {\n    if (word === \"\") {\n      fetchmoive();\n    } else {\n      const serchres = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=84efd41b07a43bc7a00301e107350456&query=${word}&language=en-US&page=${Count}`);\n      const data = await serchres.json();\n      const page = await data.total_pages;\n      setPagecount(page);\n      const datatran = data.results.map(item => {\n        return {\n          id: item.id,\n          name: item.original_title,\n          image: item.poster_path,\n          rate: item.vote_average\n        };\n      });\n      setfilms(datatran);\n      console.log(datatran);\n    }\n  }\n  const routes = createHashRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 32\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Layout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 57\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Home, {\n        ones: films,\n        getpage: getpage,\n        page: Pagecount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/movie/:id\",\n      element: /*#__PURE__*/_jsxDEV(Moivedetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 8\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navgation, {\n      isActive: IsActive,\n      handleClick: handleClick,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      initial: true,\n      children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n        router: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ma2RvnTiFtkKh56NFKDQXmdH2uk=\");\n_c = App;\nexport default App;\n//\n// 5912fc0e7af3d8f1d433c6a241f9e306\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Navgation","Home","Footer","BrowserRouter","Route","RouterProvider","Routes","createBrowserRouter","createHashRouter","createRoutesFromElements","Moivedetails","Layout","motion","AnimatePresence","jsxDEV","_jsxDEV","App","_s","fetchmoive","films","setfilms","IsActive","setIsActive","Pagecount","setPagecount","Count","setCount","console","log","handleClick","response","fetch","data","json","page","total_pages","datatran","results","map","item","id","name","original_title","image","poster_path","rate","vote_average","getpage","search","word","serchres","routes","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","ones","isActive","mode","initial","router","_c","$RefreshReg$"],"sources":["C:/Users/EXTRA/lastproject/src/App.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navgation from \"./component/Navgation/Navgation\";\nimport Home from \"./page/Home\";\nimport Footer from \"./component/footer/Footer\";\nimport {\n  BrowserRouter,\n  Route,\n  RouterProvider,\n  Routes,\n  createBrowserRouter,\n  createHashRouter,\n  createRoutesFromElements,\n} from \"react-router-dom\";\nimport Moivedetails from \"./page/Moivedetails\";\nimport Layout from \"./page/Layout\";\nimport { motion , AnimatePresence } from \"framer-motion\";\n\nfunction App() {\n  useEffect(() => {\n    fetchmoive();\n  }, []);\n  const [films, setfilms] = useState([]);\n  const [IsActive, setIsActive] = useState(\"\");\n  const [Pagecount, setPagecount] = useState(\"\");\n  const [Count,setCount]=useState(\"\")\n  \nconsole.log(Count)\n  const handleClick = () => {\n    setIsActive(!IsActive);\n  \n  };\n  // ===============all movie======================\n  async function fetchmoive() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=84efd41b07a43bc7a00301e107350456&language=ar-US&page=${Count}`)\n     \n     \n    const data = await response.json();\n    \n    \n    const page = await data.total_pages;\n    setPagecount(page);\n    // console.log(data);\n\n    const datatran = data.results.map((item) => {\n      return {\n        id: item.id,\n        name: item.original_title,\n        image: item.poster_path,\n        rate: item.vote_average,\n      };\n    });\n    setfilms(datatran);\n  } // ===============Page======================\n  async function getpage(page) {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=84efd41b07a43bc7a00301e107350456&language=ar-US&page=${page}`\n    );\n    const data = await response.json();\n    const datatran = data.results.map((item) => {\n      return {\n        id: item.id,\n        name: item.original_title,\n        image: item.poster_path,\n        rate: item.vote_average,\n      };\n    });\n    setfilms(datatran);\n    setCount(page)\n    \n  }\n  // ===============Search======================\n  async function search(word) {\n    if (word === \"\") {\n      fetchmoive();\n    } else {\n      const serchres = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=84efd41b07a43bc7a00301e107350456&query=${word}&language=en-US&page=${Count}`\n      );\n      const data = await serchres.json();\n\n      const page = await data.total_pages;\n      setPagecount(page);\n\n      const datatran = data.results.map((item) => {\n        return {\n          id: item.id,\n          name: item.original_title,\n          image: item.poster_path,\n          rate: item.vote_average,\n        };\n      });\n      setfilms(datatran);\n      console.log(datatran)\n    }\n  }\n\n   const routes = createHashRouter(\n     createRoutesFromElements(\n       <Route path=\"/\"element={<Layout/>} errorElement={<h1>Layout</h1>} >\n      <Route\n         path=\"/\"\n         element={<Home ones={films}\n      getpage={getpage} page={Pagecount} />}\n         />\n         <Route path=\"/movie/:id\" element={<Moivedetails />} />\n       </Route>\n     )\n   );\n  return (\n    <Fragment>\n      <Navgation\n        isActive={IsActive}\n        handleClick={handleClick}\n        search={search}\n      />\n      <AnimatePresence mode=\"wait\" initial={true}>\n     <RouterProvider router={routes}/>\n     </AnimatePresence>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n//\n// 5912fc0e7af3d8f1d433c6a241f9e306\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}