{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EXTRA\\\\lastproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navgation from \"./component/Navgation/Navgation\";\nimport Container from \"react-bootstrap/Container\";\nimport Home from \"./page/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [films, setfilms] = useState([]);\n  const [IsActive, setIsActive] = useState(\"\");\n  const handleClick = () => {\n    setIsActive(!IsActive);\n    console.log(\"ziad\");\n  };\n  const url = 'https://imdb-top-100-movies.p.rapidapi.com/top32';\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '7520e1984amshcb126d4ad4d3e5ap1846acjsnf8edf064be9d',\n      'X-RapidAPI-Host': 'imdb-top-100-movies.p.rapidapi.com'\n    }\n  };\n  async function fetchmoive() {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    console.log(result);\n    const realdata = result.result.map(item => {\n      return {\n        name: title\n      };\n    });\n    setfilms(realdata);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navgation, {\n      isActive: IsActive,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {\n      my: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchmoive,\n      children: \"show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NE9Guc5Bl/IY78gIO0/zzxvST4c=\");\n_c = App;\nexport default App;\n//\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useState","Navgation","Container","Home","jsxDEV","_jsxDEV","App","_s","films","setfilms","IsActive","setIsActive","handleClick","console","log","url","options","method","headers","fetchmoive","response","fetch","result","json","realdata","map","item","name","title","children","isActive","fileName","_jsxFileName","lineNumber","columnNumber","my","onClick","_c","$RefreshReg$"],"sources":["C:/Users/EXTRA/lastproject/src/App.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navgation from \"./component/Navgation/Navgation\";\nimport Container from \"react-bootstrap/Container\";\nimport Home from \"./page/Home\";\n\nfunction App() {\n  const[films,setfilms]=useState([])\n  const [IsActive, setIsActive] = useState(\"\");\n\n  const handleClick = () => {\n    setIsActive(!IsActive);\n    console.log(\"ziad\");\n  };\n\n\n  const url = 'https://imdb-top-100-movies.p.rapidapi.com/top32';\nconst options = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'X-RapidAPI-Key': '7520e1984amshcb126d4ad4d3e5ap1846acjsnf8edf064be9d',\n\t\t'X-RapidAPI-Host': 'imdb-top-100-movies.p.rapidapi.com'\n\t}\n};\n\nasync function fetchmoive() {\n\tconst response = await fetch(url, options);\n\tconst result = await response.json();\n\tconsole.log(result);\n  const realdata=result.result.map((item)=>{\n    return{\n      name:title\n    }\n  })\n  setfilms(realdata)\n}\n  return (\n    <Fragment>\n      <Navgation isActive={IsActive} handleClick={handleClick} />\n      <Home my/>\n      <button onClick={fetchmoive}>show</button>\n    </Fragment>\n  );\n}\n\nexport default App;\n//\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBD,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtBG,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACrB,CAAC;EAGD,MAAMC,GAAG,GAAG,kDAAkD;EAChE,MAAMC,OAAO,GAAG;IACfC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACR,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACpB;EACD,CAAC;EAED,eAAeC,UAAUA,CAAA,EAAG;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAEC,OAAO,CAAC;IAC1C,MAAMM,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpCV,OAAO,CAACC,GAAG,CAACQ,MAAM,CAAC;IAClB,MAAME,QAAQ,GAACF,MAAM,CAACA,MAAM,CAACG,GAAG,CAAEC,IAAI,IAAG;MACvC,OAAM;QACJC,IAAI,EAACC;MACP,CAAC;IACH,CAAC,CAAC;IACFnB,QAAQ,CAACe,QAAQ,CAAC;EACpB;EACE,oBACEnB,OAAA,CAACN,QAAQ;IAAA8B,QAAA,gBACPxB,OAAA,CAACJ,SAAS;MAAC6B,QAAQ,EAAEpB,QAAS;MAACE,WAAW,EAAEA;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3D7B,OAAA,CAACF,IAAI;MAACgC,EAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACV7B,OAAA;MAAQ+B,OAAO,EAAEjB,UAAW;MAAAU,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf;AAAC3B,EAAA,CArCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAuCZ,eAAeA,GAAG;AAClB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}